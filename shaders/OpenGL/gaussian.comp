#version 450

layout(local_size_x = 1, local_size_y = 1) in;

// downsampled output
layout(binding = 0, rgba16f) uniform image2D target;
layout(binding = 1) uniform sampler2D source; 

vec2 iResolution = imageSize(target);
ivec2 fragCoord = ivec2(gl_GlobalInvocationID.xy);

vec4 blur13(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {
  vec4 color = vec4(0.0);
  vec2 off1 = vec2(1.411764705882353) * direction;
  vec2 off2 = vec2(3.2941176470588234) * direction;
  vec2 off3 = vec2(5.176470588235294) * direction;
  color += texture(image, uv) * 0.1964825501511404;
  color += texture(image, uv + (off1 / resolution)) * 0.2969069646728344;
  color += texture(image, uv - (off1 / resolution)) * 0.2969069646728344;
  color += texture(image, uv + (off2 / resolution)) * 0.09447039785044732;
  color += texture(image, uv - (off2 / resolution)) * 0.09447039785044732;
  color += texture(image, uv + (off3 / resolution)) * 0.010381362401148057;
  color += texture(image, uv - (off3 / resolution)) * 0.010381362401148057;
  return color;
}

void main() {
    vec2 uv = fragCoord / iResolution;

    vec4 blurred_x = blur13(source, uv, iResolution, vec2(1, 0));
    vec4 blurred_y = blur13(source, uv, iResolution, vec2(0, 1));
    vec4 result = (blurred_x + blurred_y) / 2;
    result.a = 1.0;

    imageStore(target, fragCoord, result);
}